{"version":3,"sources":["logo.svg","lookup/components.js","tweets/buttons.js","tweets/lookup.js","tweets/detail.js","tweets/list.js","tweets/create.js","tweets/components.js","App.js","reportWebVitals.js","index.js"],"names":["backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","responseType","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","open","setRequestHeader","onload","status","response","detail","window","location","href","onerror","e","console","log","send","ActionBtn","props","tweet","action","didPerformAction","likes","className","actionDisplay","display","type","handleActionBackendEvent","onClick","event","preventDefault","tweetId","id","apiTweetAction","ParentTweet","parent","Tweet","hideActions","didRetweet","useState","actionTweet","setActionTweet","match","pathname","urlTweetId","groups","tweetid","isDetail","handlePerformAction","newActionTweet","content","Fragment","TweetsList","tweetsInit","setTweetsInit","tweets","setTweets","tweetsDidSet","setTweetsDidSet","useEffect","final","newTweets","concat","username","apiTweetList","alert","handleDidRetweet","newTweet","updateTweetsInit","unshift","updateFinalTweets","map","item","index","TweetCreate","textAreaRef","React","createRef","didTweet","handleBackendupdate","onSubmit","newVal","current","value","ref","required","TweetsComponent","setNewTweets","canTweet","tempNewTweets","TweetDetailComponent","didLookup","setDidLookup","setTweet","handleBackendLookup","apiTweetDetail","classname","App","src","logo","alt","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","appEl","getElementById","ReactDOM","render","createElement","tweetsEl","dataset","querySelectorAll","forEach","container"],"mappings":"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","file":"static/js/main.c1ca6815.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","function getCookie(name) {\n  let cookieValue = null;\n  if (document.cookie && document.cookie !== '') {\n      const cookies = document.cookie.split(';');\n      for (let i = 0; i < cookies.length; i++) {\n          const cookie = cookies[i].trim();\n          // Does this cookie string begin with the name we want?\n          if (cookie.substring(0, name.length + 1) === (name + '=')) {\n              cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n              break;\n          }\n      }\n  }\n  return cookieValue;\n}\n\nexport function backendLookup(method, endpoint, callback, data){\n  let jsonData;\n  if (data){\n    jsonData = JSON.stringify(data)\n  }\n  const xhr = new XMLHttpRequest()      // xhr = SomeClass()\n    // const method = 'GET'                //'POST'\n    const url = `http://localhost:8000/api${endpoint}`\n    xhr.responseType = \"json\"\n    const csrftoken = getCookie('csrftoken');\n    xhr.open(method,url)\n    xhr.setRequestHeader('Content-Type', 'application/json')\n    //for making ajax True\n    \n    if (csrftoken){\n      //xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", \"XMLHttpRequest\")\n      xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\")\n      xhr.setRequestHeader('X-CSRFToken', csrftoken)\n    }\n    \n    xhr.onload = function () {\n      if (xhr.status === 403){\n        const detail = xhr.response.detail\n        if(detail === \"Authentication credentials were not provided.\"){\n          window.location.href = \"/login?showLoginRequired=true\"\n        }\n      }\n      callback(xhr.response, xhr.status)\n    }\n    xhr.onerror = function (e){\n      console.log(\"error\", e)\n      callback({\"message\": \"The request was an error\"}, 400)\n    }\n    // console.log(jsonData)\n      xhr.send(jsonData)\n}\n\n","import React from 'react';\nimport {apiTweetAction} from './lookup'\n\nexport function ActionBtn(props){\n   const {tweet, action, didPerformAction} = props\n   const likes = tweet.likes ? tweet.likes : 0\n  //  const [likes, setLikes] = useState()\n  //  const [userLike, setUserLike] = useState(tweet.userLike === true ? true : false)\n   const className= props.className ?props.className : 'btn btn-primary btn-small'\n   const actionDisplay = action.display ? action.display: 'Action'\n   const display = action.type === 'like' ? `${likes} ${actionDisplay}` : actionDisplay\n\n  const handleActionBackendEvent = (response, status) =>{\n    console.log(status, response) \n    if ((status === 200 || status === 201) && didPerformAction){\n      //setLikes(response.likes)\n      didPerformAction(response, status)\n      // setUserLike(true)\n    }\n\n      // if (action.type === 'like'){\n      //     if(userLike === true){\n      //         //perhaps i unlike it?\n      //         setLikes(likes - 1)\n      //         setUserLike(false)\n      //     }\n      //     else{\n      //         setLikes(likes + 1)\n      //         setUserLike(true)\n      //     }\n      // }\n  }\n\n   const handleClick =(event) =>{\n       event.preventDefault()\n       apiTweetAction(tweet.id, action.type, handleActionBackendEvent)  \n   }\n      return <button className={className} onClick={handleClick}>{display}</button>\n    }","import {backendLookup} from '../lookup'\n\nexport function apiTweetCreate(newTweet, callback){\n  backendLookup(\"POST\", \"/tweets/create/\", callback, {content:newTweet})\n}\n\nexport function apiTweetList(username, callback){\n  let endpoint = \"/tweets\"\n  if (username){\n    endpoint = `/tweets/?username=${username}`\n  }\n  backendLookup(\"GET\", endpoint, callback)\n}\n\nexport function apiTweetDetail(tweetId, callback){\n  backendLookup(\"GET\", `/tweets/${tweetId}`, callback)\n}\n\nexport function apiTweetAction(tweetId, action, callback){\n  const data = {id:tweetId, action:action}\n  backendLookup(\"POST\", \"/tweets/action/\", callback, data)\n}","import React, {useState} from 'react';\nimport {ActionBtn} from './buttons'\n\n\nexport function ParentTweet(props){\n  const {tweet} = props\n  return ( tweet.parent ?\n    <div className='row'>\n        <div className='col-11 mx-auto p-3 border rounded'>\n        <p className=\"mb-0 text-muted small\">Retweet</p>\n        <Tweet hideActions className= {' '} tweet={tweet.parent}/>\n        </div>\n    </div> : null\n  )\n}\n\nexport function Tweet(props){\n  const {tweet, didRetweet, hideActions} = props\n  const [actionTweet, setActionTweet] = useState(props.tweet ? props.tweet : null)\n  const className= props.className ? props.className : ' col-10 mx-auto col-md-6 '\n\n  const path = window.location.pathname\n  const match = path.match(/(?<tweetid>\\d+)/)\n  const urlTweetId = match ? match.groups.tweetid: -1\n  const isDetail = `${tweet.id}` === `${urlTweetId}`\n\n  const handleLink = (event) =>{\n    event.preventDefault()\n    window.location.href = `/${tweet.id}`\n  }\n\n  const handlePerformAction = (newActionTweet, status)=>{\n    if (status === 200){\n      setActionTweet(newActionTweet)\n    }\n    else if(status === 201){\n      //let the tweet list know.\n      if(didRetweet){\n        didRetweet(newActionTweet)\n      }\n    }\n  }\n\n  return (\n    <div className={className}>\n    <div>\n      <p>{tweet.id} - {tweet.content}</p>\n     <ParentTweet tweet={tweet}/>\n    </div>\n    <div className='btn btn-group'>\n      {(actionTweet && hideActions !== true) && <React.Fragment>\n        <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action = {{type:\"like\", display:\"Likes\"}}/>\n        <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action = {{type:\"unlike\", display:\"Unlike\"}}/>\n        <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action = {{type:\"retweet\", display:\"Retweet\"}}/>\n      </React.Fragment>\n      }\n        {isDetail === true ? null :<button className=\"btn btn-outline-success btn-small\" onClick={handleLink}>View</button>}\n      </div>\n    \n    </div>\n  )\n}","import React, {useEffect, useState} from 'react';\nimport {apiTweetList} from './lookup'\nimport {Tweet} from './detail'\n\nexport function TweetsList(props){\n   const [tweetsInit, setTweetsInit] = useState([])\n   const [tweets, setTweets] = useState([])\n   const [tweetsDidSet, setTweetsDidSet] = useState(false)   //to  stop apiTweetList on going again and again\n  \n    useEffect(()=>{\n        const final = [...props.newTweets].concat(tweetsInit)\n        if (final.length !== tweets.length){\n            setTweets(final)\n        }\n        \n    },[props.newTweets,tweets,tweetsInit])\n  useEffect(()=>{\n    if (tweetsDidSet === false){\n    const handleTweetListLookup = (response, status) =>{\n      if (status === 200){\n        setTweetsInit(response)\n        setTweetsDidSet(true)\n      }\n      else{\n        alert(\"There was an error\")\n      }\n    }\n    //do my lookup\n    apiTweetList(props.username,handleTweetListLookup)\n  }}, [tweetsInit, tweetsDidSet, setTweetsDidSet,props.username])\n\n  const handleDidRetweet = (newTweet) =>{\n    const updateTweetsInit = [...tweetsInit]\n    updateTweetsInit.unshift(newTweet)\n    setTweetsInit(updateTweetsInit)\n\n    const updateFinalTweets = [...tweets]\n    updateFinalTweets.unshift(tweets)\n    setTweets(updateFinalTweets)\n  }\n\n  return tweets.map((item, index)=>{\n        return <Tweet tweet={item} didRetweet={handleDidRetweet} className=\"my-5 py-5 border bg-white text-dark\" key ={`${index}-{item.id}`}/>\n        })\n}","import React from 'react';\nimport {apiTweetCreate} from './lookup';\n\n\nexport function TweetCreate(props){\n  const textAreaRef = React.createRef()\n  const {didTweet} = props\n\n  const handleBackendupdate = (response, status)=>{\n    if(status === 201){\n      didTweet(response)\n    }\n    else{\n      console.log(response)\n      alert(\"An error occured, please try again!!\")\n    }\n  }\n\n  const handleSubmit = (event) =>{\n      event.preventDefault()\n      // console.log(event)\n      // console.log(textAreaRef.current.value)\n      const newVal = textAreaRef.current.value\n      //backend api request handler\n      // console.log(newVal)\n      apiTweetCreate(newVal, handleBackendupdate)\n      textAreaRef.current.value = ''\n  }\n\n  return <div className={props.className}>\n      <form onSubmit={handleSubmit}>\n          <textarea ref={textAreaRef} required={true} name = \"tweet\"  className=\"form-control\"></textarea>\n          <button type=\"submit\" className=\"btn btn-primary my-3\">Tweet Now</button>\n          \n      </form>\n  </div>\n}\n","import React, {useEffect, useState} from 'react'\nimport {TweetsList} from './list'\nimport {TweetCreate} from './create'\nimport {Tweet} from './detail'\nimport {apiTweetDetail} from './lookup'\n\n\nexport function TweetsComponent(props){\n  console.log(props)\n  const [newTweets, setNewTweets] = useState([])\n\n  const canTweet = props.canTweet === 'false'? false : true\n  const handleNewTweet = (newTweet)=>{\n    let tempNewTweets = [...newTweets]\n    tempNewTweets.unshift(newTweet)\n    setNewTweets(tempNewTweets)\n  }\n\n  return <div className={props.className}> \n  {canTweet === true && <TweetCreate didTweet={handleNewTweet} className=\"col-12 mb-3\" />   \n  } <TweetsList newTweets={newTweets} {...props}/>\n  </div>  \n}\n\nexport function TweetDetailComponent(props){\n  const {tweetId} = props\n  const [didLookup, setDidLookup] = useState(false)\n  const [tweet, setTweet] = useState(null)\n\n  const handleBackendLookup = (response, status) =>{\n    if(status === 200){\n      setTweet(response)\n    }\n    else{\n      alert(\"There was an error finding your tweet\")\n    }\n  }\n  useEffect(()=>{\n    if (didLookup === false){\n      apiTweetDetail(tweetId, handleBackendLookup)\n      setDidLookup(true)\n    }\n  },[tweetId,didLookup, setDidLookup])\n  return tweet === null ? null : <Tweet tweet = {tweet} classname={props.className}/>\n}\n\n\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {TweetsComponent} from './tweets'\n\nfunction App() {\n \n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <div>\n        <TweetsComponent/>\n        </div>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {TweetsComponent, TweetDetailComponent} from './tweets';\n\nconst appEl = document.getElementById('root')\nif(appEl){\n  ReactDOM.render(\n    <App />, appEl);\n}\n\nconst e = React.createElement\n\nconst tweetsEl = document.getElementById('tweetme-2')\nif (tweetsEl){\n  // console.log(tweetsEl.dataset)\n  ReactDOM.render(\n     e(TweetsComponent, tweetsEl.dataset), tweetsEl);\n}\n\nconst tweetDetailElement = document.querySelectorAll('.tweetme2-detail')\n\ntweetDetailElement.forEach(container =>{\n  ReactDOM.render(\n    e(TweetDetailComponent, container.dataset), container);\n})\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}